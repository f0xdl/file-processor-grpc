// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: fileprocessor/fileprocessor.proto

package fileprocessor

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Paths         []string               `protobuf:"bytes,1,rep,name=paths,proto3" json:"paths,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileList) Reset() {
	*x = FileList{}
	mi := &file_fileprocessor_fileprocessor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileList) ProtoMessage() {}

func (x *FileList) ProtoReflect() protoreflect.Message {
	mi := &file_fileprocessor_fileprocessor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileList.ProtoReflect.Descriptor instead.
func (*FileList) Descriptor() ([]byte, []int) {
	return file_fileprocessor_fileprocessor_proto_rawDescGZIP(), []int{0}
}

func (x *FileList) GetPaths() []string {
	if x != nil {
		return x.Paths
	}
	return nil
}

type UploadFileReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Content       []byte                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileReq) Reset() {
	*x = UploadFileReq{}
	mi := &file_fileprocessor_fileprocessor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileReq) ProtoMessage() {}

func (x *UploadFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_fileprocessor_fileprocessor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileReq.ProtoReflect.Descriptor instead.
func (*UploadFileReq) Descriptor() ([]byte, []int) {
	return file_fileprocessor_fileprocessor_proto_rawDescGZIP(), []int{1}
}

func (x *UploadFileReq) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *UploadFileReq) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type CheckFileExistsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckFileExistsReq) Reset() {
	*x = CheckFileExistsReq{}
	mi := &file_fileprocessor_fileprocessor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckFileExistsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckFileExistsReq) ProtoMessage() {}

func (x *CheckFileExistsReq) ProtoReflect() protoreflect.Message {
	mi := &file_fileprocessor_fileprocessor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckFileExistsReq.ProtoReflect.Descriptor instead.
func (*CheckFileExistsReq) Descriptor() ([]byte, []int) {
	return file_fileprocessor_fileprocessor_proto_rawDescGZIP(), []int{2}
}

func (x *CheckFileExistsReq) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type FileStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Lines         int32                  `protobuf:"varint,2,opt,name=lines,proto3" json:"lines,omitempty"`
	Words         int32                  `protobuf:"varint,3,opt,name=words,proto3" json:"words,omitempty"`
	Err           string                 `protobuf:"bytes,4,opt,name=err,proto3" json:"err,omitempty"` // if error during processing
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileStats) Reset() {
	*x = FileStats{}
	mi := &file_fileprocessor_fileprocessor_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileStats) ProtoMessage() {}

func (x *FileStats) ProtoReflect() protoreflect.Message {
	mi := &file_fileprocessor_fileprocessor_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileStats.ProtoReflect.Descriptor instead.
func (*FileStats) Descriptor() ([]byte, []int) {
	return file_fileprocessor_fileprocessor_proto_rawDescGZIP(), []int{3}
}

func (x *FileStats) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileStats) GetLines() int32 {
	if x != nil {
		return x.Lines
	}
	return 0
}

func (x *FileStats) GetWords() int32 {
	if x != nil {
		return x.Words
	}
	return 0
}

func (x *FileStats) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

var File_fileprocessor_fileprocessor_proto protoreflect.FileDescriptor

const file_fileprocessor_fileprocessor_proto_rawDesc = "" +
	"\n" +
	"!fileprocessor/fileprocessor.proto\x12\rfileprocessor\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1egoogle/protobuf/wrappers.proto\" \n" +
	"\bFileList\x12\x14\n" +
	"\x05paths\x18\x01 \x03(\tR\x05paths\"E\n" +
	"\rUploadFileReq\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x18\n" +
	"\acontent\x18\x02 \x01(\fR\acontent\"0\n" +
	"\x12CheckFileExistsReq\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\"]\n" +
	"\tFileStats\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x14\n" +
	"\x05lines\x18\x02 \x01(\x05R\x05lines\x12\x14\n" +
	"\x05words\x18\x03 \x01(\x05R\x05words\x12\x10\n" +
	"\x03err\x18\x04 \x01(\tR\x03err2\xe8\x01\n" +
	"\rFileProcessor\x12C\n" +
	"\fGetFileStats\x12\x17.fileprocessor.FileList\x1a\x18.fileprocessor.FileStats0\x01\x12D\n" +
	"\n" +
	"UploadFile\x12\x1c.fileprocessor.UploadFileReq\x1a\x16.google.protobuf.Empty(\x01\x12L\n" +
	"\vIsFileExist\x12!.fileprocessor.CheckFileExistsReq\x1a\x1a.google.protobuf.BoolValueB8Z6github.com/f0xdl/file-processor-grpc/api/fileprocessorb\x06proto3"

var (
	file_fileprocessor_fileprocessor_proto_rawDescOnce sync.Once
	file_fileprocessor_fileprocessor_proto_rawDescData []byte
)

func file_fileprocessor_fileprocessor_proto_rawDescGZIP() []byte {
	file_fileprocessor_fileprocessor_proto_rawDescOnce.Do(func() {
		file_fileprocessor_fileprocessor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_fileprocessor_fileprocessor_proto_rawDesc), len(file_fileprocessor_fileprocessor_proto_rawDesc)))
	})
	return file_fileprocessor_fileprocessor_proto_rawDescData
}

var file_fileprocessor_fileprocessor_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_fileprocessor_fileprocessor_proto_goTypes = []any{
	(*FileList)(nil),             // 0: fileprocessor.FileList
	(*UploadFileReq)(nil),        // 1: fileprocessor.UploadFileReq
	(*CheckFileExistsReq)(nil),   // 2: fileprocessor.CheckFileExistsReq
	(*FileStats)(nil),            // 3: fileprocessor.FileStats
	(*emptypb.Empty)(nil),        // 4: google.protobuf.Empty
	(*wrapperspb.BoolValue)(nil), // 5: google.protobuf.BoolValue
}
var file_fileprocessor_fileprocessor_proto_depIdxs = []int32{
	0, // 0: fileprocessor.FileProcessor.GetFileStats:input_type -> fileprocessor.FileList
	1, // 1: fileprocessor.FileProcessor.UploadFile:input_type -> fileprocessor.UploadFileReq
	2, // 2: fileprocessor.FileProcessor.IsFileExist:input_type -> fileprocessor.CheckFileExistsReq
	3, // 3: fileprocessor.FileProcessor.GetFileStats:output_type -> fileprocessor.FileStats
	4, // 4: fileprocessor.FileProcessor.UploadFile:output_type -> google.protobuf.Empty
	5, // 5: fileprocessor.FileProcessor.IsFileExist:output_type -> google.protobuf.BoolValue
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_fileprocessor_fileprocessor_proto_init() }
func file_fileprocessor_fileprocessor_proto_init() {
	if File_fileprocessor_fileprocessor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fileprocessor_fileprocessor_proto_rawDesc), len(file_fileprocessor_fileprocessor_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fileprocessor_fileprocessor_proto_goTypes,
		DependencyIndexes: file_fileprocessor_fileprocessor_proto_depIdxs,
		MessageInfos:      file_fileprocessor_fileprocessor_proto_msgTypes,
	}.Build()
	File_fileprocessor_fileprocessor_proto = out.File
	file_fileprocessor_fileprocessor_proto_goTypes = nil
	file_fileprocessor_fileprocessor_proto_depIdxs = nil
}
